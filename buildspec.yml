version: 0.2

phases:
  pre_build:
    commands:
      # Build the Spring Boot application JAR file using Maven
      - mvn clean package -DskipTests

      - echo "Logging to Docker Hub..."
      - docker login --username "geovannygl" --password "&clickPanda78"

      - echo "Installing dependencies"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 635462603772.dkr.ecr.us-east-1.amazonaws.com

      - echo "Starting pre-build..."
      # Get the CODEBUILD_SOURCE_VERSION variable branch name
      - export BRANCH_NAME=dev
      - export IMAGE_TAG=latest # Use the latest tag
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -f Dockerfile.dev -t spring-boot-app .
  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker tag spring-boot-app:latest 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app:latest
      - docker push 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app:latest
artifacts:
  files:
    - target/demo-sprint-boot-0.0.1-SNAPSHOT.jar
    - imagedefinitions.json # Include the imagedefinitions file as artifact