version: 0.2

phases:
  install:
    runtime-versions:
      java: openjdk17
      maven: 3.8.6
  pre_build:
    commands:
      # Build the Spring Boot application JAR file using Maven
      - mvn clean package -DskipTests
      - echo "Installing dependencies"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 635462603772.dkr.ecr.us-east-1.amazonaws.com

      - echo "Starting pre-build..."
      # Get the CODEBUILD_SOURCE_VERSION variable branch name
      - export BRANCH_NAME=dev
      - export IMAGE_TAG=latest # Use the latest tag
  build:
    commands:
      - echo "Building Docker image..."
      - |
        if [ "$BRANCH_NAME" == "dev" ]; then 
          docker build -f Dockerfile.dev -t spring-boot-app .
        else 
          docker build -f Dockerfile.prod -t spring-boot-app-prod .
        fi
  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - |
        if [ "$BRANCH_NAME" == "dev" ]; then 
          docker tag spring-boot-app:latest 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app:latest
          docker push 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app:latest
        else
          docker tag spring-boot-app-prod:latest 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app-prod:latest
          docker push 635462603772.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app-prod:latest
        fi
artifacts:
  files:
    - target/demo-sprint-boot-0.0.1-SNAPSHOT.jar
    - imagedefinitions.json # Include the imagedefinitions file as artifact
  discard-paths: yes
  base-directory: target # Specifies the base path